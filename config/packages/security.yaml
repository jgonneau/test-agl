security:
    encoders:
        App\Entity\Utilisateur:
            algorithm:
                bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        multiple_provider:
            chain:
                providers: [db_username, db_email]
        db_username:
            entity:
                class: App\Entity\Utilisateur
                property: nickname
        db_email:
            entity:
                class: App\Entity\Utilisateur
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            provider: multiple_provider

            form_login:
                login_path: secur_connexion
                check_path: secur_connexion

            logout:
                path: /deconnexion
                target: /


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/espace_videos, roles: ROLE_USER }
        #- { path: ^/compte, roles: ROLE_USER }
        #- { path: ^/ajout_video, roles: ROLE_USER }
        #- { path: ^/edition_video, roles: ROLE_USER }
        #- { path: ^/suppression_vdeo, roles: ROLE_USER }
